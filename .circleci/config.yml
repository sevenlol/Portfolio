version: 2
jobs:
  # test website job
  test_web:
    working_directory: ~/project/web
    docker:
      - image: circleci/node:8.9.1-browsers
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          # install dependencies
          name: Install local dependencies
          command: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          # linting
          name: Linting
          command: npm run lint
      - run:
          # test
          name: Test
          command: npm run test
          environment:
            JUNIT_REPORT_PATH: reports/
            JUNIT_REPORT_NAME: test-results.xml
      - store_test_results:
          path: reports/
      - store_artifacts:
          path: reports/
  # build website job
  build_web:
    working_directory: ~/project/web
    docker:
      - image: circleci/node:8.9.1-browsers
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          # install dependencies
          name: Install local dependencies
          command: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          # configure angular environment
          name: Configure environment
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                export PORTFOLIO_ENV=staging
            elif [ "${CIRCLE_BRANCH}" == "release" ]; then
                export PORTFOLIO_ENV=prod
            else
                echo "Invalid branch name ${CIRCLE_BRANCE}"
            fi
            echo ${CIRCLE_BRANCH}
            echo ${PORTFOLIO_ENV}
            npm run configure-env
      - run:
          name: Build Website
          command: npm run build
      - store_artifacts:
          path: dist/
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist
  # deploy web job
  deploy_web:
    working_directory: ~/project/web
    docker:
      - image: circleci/node:8.9.1-browsers
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          # install dependencies
          name: Install local dependencies
          command: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
        # configure angular environment
        name: Configure environment
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            export FIREBASE_PROJECT=${FIREBASE_PROJECT_STAGING}
            export FIREBASE_TOKEN=${FIREBASE_TOKEN_STAGING}
          elif [ "${CIRCLE_BRANCH}" == "release" ]; then
            export FIREBASE_PROJECT=${FIREBASE_PROJECT_PROD}
            export FIREBASE_TOKEN=${FIREBASE_TOKEN_PROD}
          else
            echo "Invalid branch name ${CIRCLE_BRANCE}"
          fi
          echo ${CIRCLE_BRANCH}
          echo ${FIREBASE_PROJECT}
          ./node_modules/.bin/firebase use ${FIREBASE_PROJECT}
          ./node_modules/.bin/firebase deploy --token ${FIREBASE_TOKEN} --only hosting
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test_web
      - build_web:
          requires:
            - test_web
          filters:
            branches:
              only:
                - master
                - release
      - deploy_web:
          requires:
            - build_web
          filters:
            branches:
              only:
                - master
